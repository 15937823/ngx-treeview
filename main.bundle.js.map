{"version":3,"sources":["webpack:///./src/demo/room/room.component.ts","webpack:///./src/demo/room/room.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/lib/dropdown-treeview.module.ts","webpack:///./src/lib/treeview-helper.ts","webpack:///./src/lib/treeview-item.component.ts","webpack:///./src/demo/i18n.ts","webpack:///./src/lib/treeview-config.ts","webpack:///./src/lib/treeview-i18n.ts","webpack:///./src/lib/treeview-item.ts","webpack:///./src/lib/treeview-event-parser.ts","webpack:///./src/lib/treeview.component.ts","webpack:///./src/demo/default-treeview-i18n.ts","webpack:///./src/lib/dropdown-treeview.component.ts","webpack:///./src/lib/treeview.pipe.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/lib/index.ts","webpack:///./src/demo/app.component.ts","webpack:///./src/demo/app.module.ts","webpack:///./src/demo/book/book.component.ts","webpack:///./src/demo/book/book.service.ts","webpack:///./src/demo/city/city-treeview-i18n.ts","webpack:///./src/demo/city/city.component.ts","webpack:///./src/demo/city/city.service.ts","webpack:///./src/demo/disabled-on-selector.directive.ts","webpack:///./src/demo/product/product.component.ts","webpack:///./src/demo/product/product.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TreeviewConfig, TreeviewItem } from 'ngx-treeview';\nimport { RoomService } from './room.service';\n\n@Component({\n    selector: 'ngx-room',\n    template: `\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Selected rooms: {{values}}\n        </div>\n    </div>\n    <div class=\"col-12\">\n        <div class=\"form-group row\">\n            <label for=\"item-category\" class=\"col-3 col-form-label\">Item category</label>\n            <div class=\"col-9\">\n                <ngx-dropdown-treeview [config]=\"config\" [items]=\"items\" (selectedChange)=\"values = $event\">\n                </ngx-dropdown-treeview>\n            </div>\n        </div>\n    </div>\n</div>\n`, providers: [\n        RoomService\n    ]\n})\nexport class RoomComponent implements OnInit {\n    items: TreeviewItem[];\n    values: any[];\n    config: TreeviewConfig = {\n        isShowAllCheckBox: true,\n        isShowFilter: true,\n        isShowCollapseExpand: false,\n        maxHeight: 500\n    };\n\n    constructor(\n        private service: RoomService\n    ) { }\n\n    ngOnInit() {\n        this.items = this.service.getRooms();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/room/room.component.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem } from 'ngx-treeview';\n\n@Injectable()\nexport class RoomService {\n    getRooms(): TreeviewItem[] {\n        const items: TreeviewItem[] = [];\n        for (let i = 0; i < 1000; i++) {\n            const value: any = i === 0 ? { name: `${i}` } : i;\n            const checked = i % 100 === 0;\n            const item = new TreeviewItem({ text: `Room ${i}`, value: value, checked: checked });\n            items.push(item);\n        };\n        return items;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/room/room.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DropdownTreeviewComponent } from './dropdown-treeview.component';\nimport { TreeviewComponent } from './treeview.component';\nimport { TreeviewItemComponent } from './treeview-item.component';\nimport { TreeviewPipe } from './treeview.pipe';\nimport { TreeviewI18n, TreeviewI18nDefault } from './treeview-i18n';\nimport { TreeviewConfig } from './treeview-config';\nimport { TreeviewEventParser, DefaultTreeviewEventParser } from './treeview-event-parser';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule\n    ],\n    declarations: [\n        TreeviewItemComponent,\n        DropdownTreeviewComponent,\n        TreeviewComponent,\n        TreeviewPipe\n    ], exports: [\n        DropdownTreeviewComponent,\n        TreeviewComponent,\n        TreeviewPipe\n    ]\n})\nexport class DropdownTreeviewModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DropdownTreeviewModule,\n            providers: [\n                TreeviewConfig,\n                { provide: TreeviewI18n, useClass: TreeviewI18nDefault },\n                { provide: TreeviewEventParser, useClass: DefaultTreeviewEventParser }\n            ]\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/dropdown-treeview.module.ts","import * as _ from 'lodash';\nimport { TreeviewItem } from './treeview-item';\n\nexport const TreeviewHelper = {\n    findParent: findParent,\n    removeItem: removeItem\n};\n\nfunction findParent(x: TreeviewItem, items: TreeviewItem[]): TreeviewItem {\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (x === item) {\n            return undefined;\n        }\n\n        if (item.children) {\n            for (let j = 0; j < item.children.length; j++) {\n                const child = item.children[j];\n                if (x === child) {\n                    return item;\n                } else {\n                    const parent = findParent(x, item.children);\n                    if (parent) {\n                        return parent;\n                    }\n                }\n            }\n        }\n    }\n\n    return undefined;\n}\n\nfunction removeItem(x: TreeviewItem, items: TreeviewItem[]) {\n    const parent = TreeviewHelper.findParent(x, items);\n    if (parent) {\n        _.pull(parent.children, x);\n        if (parent.children.length === 0) {\n            parent.children = undefined;\n        } else {\n            parent.correctChecked();\n        }\n    } else {\n        _.pull(items, x);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-helper.ts","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { TreeviewItem } from './treeview-item';\r\nimport { TreeviewItemTemplateContext } from './treeview-item-template-context';\r\n\r\n@Component({\r\n    selector: 'ngx-treeview-item',\r\n    template: `\r\n<div class=\"treeview-item\">\r\n    <ng-template [ngTemplateOutlet]=\"template\"\r\n        [ngOutletContext]=\"{item: item, toggleCollapseExpand: toggleCollapseExpand, onCheckedChange: onCheckedChange}\">\r\n    </ng-template>\r\n    <div *ngIf=\"!item.collapsed\">\r\n        <ngx-treeview-item *ngFor=\"let child of item.children\" [item]=\"child\" [template]=\"template\"\r\n            (checkedChange)=\"onChildCheckedChange(child, $event)\">\r\n        </ngx-treeview-item>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: [`\r\n:host {\r\n    display: block;\r\n}\r\n:host /deep/ .fa {\r\n    margin-right: .2rem;\r\n    width: .5rem;\r\n    cursor: pointer;\r\n}\r\n.treeview-item {\r\n    white-space: nowrap;\r\n}\r\n.treeview-item .treeview-item {\r\n    margin-left: 2rem;\r\n}\r\n    `]\r\n})\r\nexport class TreeviewItemComponent {\r\n    @Input() template: TemplateRef<TreeviewItemTemplateContext>;\r\n    @Input() item: TreeviewItem;\r\n    @Output() checkedChange = new EventEmitter<boolean>();\r\n\r\n    toggleCollapseExpand = () => {\r\n        this.item.collapsed = !this.item.collapsed;\r\n    }\r\n\r\n    onCheckedChange = () => {\r\n        const checked = this.item.checked;\r\n        if (!_.isNil(this.item.children)) {\r\n            this.item.children.forEach(child => child.setCheckedRecursive(checked));\r\n        }\r\n\r\n        this.checkedChange.emit(checked);\r\n    }\r\n\r\n    onChildCheckedChange(child: TreeviewItem, checked: boolean) {\r\n        if (this.item.checked !== checked) {\r\n            let itemChecked = true;\r\n            for (let i = 0; i < this.item.children.length; i++) {\r\n                if (!this.item.children[i].checked) {\r\n                    itemChecked = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.item.checked = itemChecked;\r\n        }\r\n\r\n        this.checkedChange.emit(checked);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-item.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class I18n {\n    language = 'en';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/i18n.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TreeviewConfig {\n    isShowAllCheckBox = true;\n    isShowFilter = false;\n    isShowCollapseExpand = false;\n    maxHeight = 500;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-config.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem } from './treeview-item';\n\n@Injectable()\nexport abstract class TreeviewI18n {\n    abstract getText(checkededItems: TreeviewItem[], isAll: boolean): string;\n    abstract allCheckboxText(): string;\n    abstract filterPlaceholder(): string;\n    abstract filterNoItemsFoundText(): string;\n    abstract tooltipCollapseExpand(isCollapse: boolean): string;\n}\n\n@Injectable()\nexport class TreeviewI18nDefault extends TreeviewI18n {\n    getText(checkededItems: TreeviewItem[], isAll: boolean): string {\n        if (isAll) {\n            return 'All';\n        }\n\n        switch (checkededItems.length) {\n            case 0:\n                return 'Select options';\n            case 1:\n                return checkededItems[0].text;\n            default:\n                return `${checkededItems.length} options selected`;\n        }\n    }\n\n    allCheckboxText(): string {\n        return 'All';\n    }\n\n    filterPlaceholder(): string {\n        return 'Filter';\n    }\n\n    filterNoItemsFoundText(): string {\n        return 'No items found';\n    }\n\n    tooltipCollapseExpand(isCollapse: boolean): string {\n        return isCollapse ? 'Expand' : 'Collapse';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-i18n.ts","import * as _ from 'lodash';\n\nexport interface TreeItem {\n    text: string;\n    value: any;\n    disabled?: boolean;\n    checked?: boolean;\n    collapsed?: boolean;\n    children?: TreeItem[];\n}\n\nexport class TreeviewItem {\n    private internalDisabled = false;\n    private internalChecked = true;\n    private internalCollapsed = false;\n    private internalChildren: TreeviewItem[];\n    text: string;\n    value: any;\n\n    constructor(item: TreeItem, autoCorrectChecked = false) {\n        if (_.isNil(item)) {\n            throw new Error('Item must be defined');\n        }\n        if (_.isString(item.text)) {\n            this.text = item.text;\n        } else {\n            throw new Error('A text of item must be string object');\n        }\n        this.value = item.value;\n        if (_.isBoolean(item.disabled)) {\n            this.disabled = item.disabled;\n        }\n        if (_.isBoolean(item.checked)) {\n            this.checked = item.checked;\n        }\n        if (_.isBoolean(item.collapsed)) {\n            this.collapsed = item.collapsed;\n        }\n        if (this.disabled === true && this.checked === false) {\n            throw new Error('A disabled item must be checked');\n        }\n        if (!_.isNil(item.children)) {\n            this.children = item.children.map(child => {\n                if (this.disabled === true) {\n                    child.disabled = true;\n                }\n\n                return new TreeviewItem(child);\n            });\n        }\n\n        if (autoCorrectChecked) {\n            this.correctChecked();\n        }\n    }\n\n    get checked(): boolean {\n        return this.internalChecked;\n    }\n\n    set checked(value: boolean) {\n        if (_.isBoolean(value) && this.internalChecked !== value) {\n            if (!this.internalDisabled) {\n                this.internalChecked = value;\n            }\n        }\n    }\n\n    setCheckedRecursive(value: boolean) {\n        if (_.isBoolean(value)) {\n            if (!this.internalDisabled) {\n                this.internalChecked = value;\n                if (!_.isNil(this.internalChildren)) {\n                    this.internalChildren.forEach(child => child.setCheckedRecursive(value));\n                }\n            }\n        }\n    }\n\n    get disabled(): boolean {\n        return this.internalDisabled;\n    }\n\n    set disabled(value: boolean) {\n        if (_.isBoolean(value) && this.internalDisabled !== value) {\n            this.internalDisabled = value;\n            if (!_.isNil(this.internalChildren)) {\n                this.internalChildren.forEach(child => child.disabled = value);\n            }\n        }\n    }\n\n    get collapsed(): boolean {\n        return this.internalCollapsed;\n    }\n\n    set collapsed(collapsed: boolean) {\n        if (_.isBoolean(collapsed) && this.internalCollapsed !== collapsed) {\n            this.internalCollapsed = collapsed;\n        }\n    }\n\n    setCollapsedRecursive(value: boolean) {\n        if (_.isBoolean(value)) {\n            this.internalCollapsed = value;\n            if (!_.isNil(this.internalChildren)) {\n                this.internalChildren.forEach(child => child.setCollapsedRecursive(value));\n            }\n        }\n    }\n\n    get children(): TreeviewItem[] {\n        return this.internalChildren;\n    }\n\n    set children(value: TreeviewItem[]) {\n        if (this.internalChildren !== value) {\n            if (_.isArray(value) && value.length === 0) {\n                throw new Error('Children must be not an empty array');\n            }\n            this.internalChildren = value;\n            if (!_.isNil(this.internalChildren)) {\n                let checked = true;\n                this.internalChildren.forEach(child => {\n                    if (child.checked === false) {\n                        checked = false;\n                    }\n                });\n                this.internalChecked = checked;\n            }\n        }\n    }\n\n    getCheckedItems(): TreeviewItem[] {\n        let checkedItems: TreeviewItem[] = [];\n        if (_.isNil(this.internalChildren)) {\n            if (this.internalChecked) {\n                checkedItems.push(this);\n            }\n        } else {\n            const childCount = this.internalChildren.length;\n            for (let i = 0; i < childCount; i++) {\n                checkedItems = _.concat(checkedItems, this.internalChildren[i].getCheckedItems());\n            }\n        }\n\n        return checkedItems;\n    }\n\n    correctChecked() {\n        this.internalChecked = this.getCorrectChecked();\n    }\n\n    private getCorrectChecked(): boolean {\n        let checked = this.checked;\n        if (!_.isNil(this.internalChildren)) {\n            checked = true;\n            const childCount = this.internalChildren.length;\n            for (let i = 0; i < childCount; i++) {\n                const child = this.internalChildren[i];\n                child.internalChecked = child.getCorrectChecked();\n                if (!child.internalChecked) {\n                    checked = false;\n                    break;\n                }\n            }\n        }\n\n        return checked;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-item.ts","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { TreeviewComponent } from './treeview.component';\nimport { TreeviewItem } from './treeview-item';\n\n@Injectable()\nexport abstract class TreeviewEventParser {\n    abstract getSelectedChange(component: TreeviewComponent): any[];\n}\n\n@Injectable()\nexport class DefaultTreeviewEventParser extends TreeviewEventParser {\n    getSelectedChange(component: TreeviewComponent): any[] {\n        const checkedItems = component.checkedItems;\n        if (!_.isNil(checkedItems)) {\n            return checkedItems.map(item => item.value);\n        }\n\n        return [];\n    }\n}\n\nexport interface DownlineTreeviewItem {\n    item: TreeviewItem;\n    parent: DownlineTreeviewItem;\n}\n\n@Injectable()\nexport class DownlineTreeviewEventParser extends TreeviewEventParser {\n    getSelectedChange(component: TreeviewComponent): any[] {\n        const items = component.items;\n        if (!_.isNil(items)) {\n            let result: DownlineTreeviewItem[] = [];\n            items.forEach(item => {\n                const links = this.getLinks(item, null);\n                if (!_.isNil(links)) {\n                    result = result.concat(links);\n                }\n            });\n\n            return result;\n        }\n\n        return [];\n    }\n\n    getLinks(item: TreeviewItem, parent: DownlineTreeviewItem): DownlineTreeviewItem[] {\n        if (!_.isNil(item.children)) {\n            const link = {\n                item: item,\n                parent: parent\n            };\n            let result: DownlineTreeviewItem[] = [];\n            item.children.forEach(child => {\n                const links = this.getLinks(child, link);\n                if (!_.isNil(links)) {\n                    result = result.concat(links);\n                }\n            });\n\n            return result;\n        }\n\n        if (item.checked) {\n            return [{\n                item: item,\n                parent: parent\n            }];\n        }\n\n        return null;\n    }\n}\n\n@Injectable()\nexport class OrderDownlineTreeviewEventParser extends TreeviewEventParser {\n    private currentDownlines: DownlineTreeviewItem[] = [];\n    private parser = new DownlineTreeviewEventParser();\n\n    getSelectedChange(component: TreeviewComponent): any[] {\n        const newDownlines: DownlineTreeviewItem[] = this.parser.getSelectedChange(component);\n        if (this.currentDownlines.length === 0) {\n            this.currentDownlines = newDownlines;\n        } else {\n            const intersectDownlines: DownlineTreeviewItem[] = [];\n            this.currentDownlines.forEach(downline => {\n                let foundIndex = -1;\n                const length = newDownlines.length;\n                for (let i = 0; i < length; i++) {\n                    if (downline.item.value === newDownlines[i].item.value) {\n                        foundIndex = i;\n                    }\n                }\n\n                if (foundIndex !== -1) {\n                    intersectDownlines.push(newDownlines[foundIndex]);\n                    newDownlines.splice(foundIndex, 1);\n                }\n            });\n\n            this.currentDownlines = intersectDownlines.concat(newDownlines);\n        }\n\n        return this.currentDownlines;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview-event-parser.ts","import { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges, TemplateRef } from '@angular/core';\nimport * as _ from 'lodash';\nimport { TreeviewI18n } from './treeview-i18n';\nimport { TreeviewItem } from './treeview-item';\nimport { TreeviewConfig } from './treeview-config';\nimport { TreeviewEventParser } from './treeview-event-parser';\nimport { TreeviewItemTemplateContext } from './treeview-item-template-context';\n\nclass FilterTreeviewItem extends TreeviewItem {\n    private readonly refItem: TreeviewItem;\n    constructor(item: TreeviewItem) {\n        super({\n            text: item.text,\n            value: item.value,\n            disabled: item.disabled,\n            checked: item.checked,\n            collapsed: item.collapsed,\n            children: item.children\n        });\n        this.refItem = item;\n    }\n\n    updateRefChecked() {\n        if (!_.isNil(this.children)) {\n            this.children.forEach(child => {\n                if (child instanceof FilterTreeviewItem) {\n                    child.updateRefChecked();\n                }\n            });\n        }\n\n        let refChecked = this.checked;\n        if (!_.isNil(this.refItem.children)) {\n            for (let i = 0; i < this.refItem.children.length; i++) {\n                const refChild = this.refItem.children[i];\n                if (refChild instanceof FilterTreeviewItem) {\n                    refChild.updateRefChecked();\n                }\n                if (!refChild.checked) {\n                    refChecked = false;\n                    break;\n                }\n            }\n        }\n        this.refItem.checked = refChecked;\n    }\n}\n\n@Component({\n    selector: 'ngx-treeview',\n    template: `\n<ng-template #tpl let-item=\"item\"\n    let-toggleCollapseExpand=\"toggleCollapseExpand\"\n    let-onCheckedChange=\"onCheckedChange\">\n    <div class=\"form-check\">\n        <i *ngIf=\"item.children\" (click)=\"toggleCollapseExpand()\" aria-hidden=\"true\"\n            class=\"fa\" [class.fa-caret-right]=\"item.collapsed\" [class.fa-caret-down]=\"!item.collapsed\"></i>\n        <label class=\"form-check-label\">\n            <input type=\"checkbox\" class=\"form-check-input\"\n                [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\" />\n            {{item.text}}\n        </label>\n    </div>\n</ng-template>\n<div class=\"treeview-header\">\n    <div *ngIf=\"config.isShowFilter\" class=\"row\">\n        <div class=\"col-12\">\n            <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.filterPlaceholder()\"\n                [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange()\" />\n        </div>\n    </div>\n    <div *ngIf=\"hasFilterItems\">\n        <div *ngIf=\"config.isShowAllCheckBox || config.isShowCollapseExpand\" class=\"row\">\n            <div class=\"col-12\" [class.row-margin]=\"config.isShowFilter && (config.isShowAllCheckBox || config.isShowCollapseExpand)\">\n                <label *ngIf=\"config.isShowAllCheckBox\" class=\"form-check-label label-item-all\">\n                    <input type=\"checkbox\" class=\"form-check-input\"\n                        [(ngModel)]=\"allItem.checked\" (ngModelChange)=\"onAllCheckedChange($event)\" />\n                        {{i18n.allCheckboxText()}}\n                </label>\n                <label *ngIf=\"config.isShowCollapseExpand\" class=\"pull-right label-collapse-expand\" (click)=\"toggleCollapseExpand()\">\n                    <i [title]=\"i18n.tooltipCollapseExpand(allItem.collapsed)\" aria-hidden=\"true\"\n                        class=\"fa\" [class.fa-expand]=\"allItem.collapsed\" [class.fa-compress]=\"!allItem.collapsed\"></i>\n                </label>\n            </div>\n        </div>\n        <div *ngIf=\"config.isShowFilter || config.isShowAllCheckBox || config.isShowCollapseExpand\" class=\"divider\"></div>\n    </div>\n</div>\n<div class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\n    <div *ngFor=\"let item of filterItems\">\n        <ngx-treeview-item [item]=\"item\" [template]=\"template || tpl\" (checkedChange)=\"onItemCheckedChange(item, $event)\">\n        </ngx-treeview-item>\n    </div>\n</div>\n<div *ngIf=\"!hasFilterItems\" class=\"treeview-text\">\n    {{i18n.filterNoItemsFoundText()}}\n</div>`,\n    styles: [`\n.row-margin {\n    margin-top: .3rem;\n}\n.label-item-all {\n}\n.label-collapse-expand {\n    margin: 0;\n    padding: 0 .3rem;\n    cursor: pointer;\n}\n.divider {\n    height: 1px;\n    margin: 0.5rem 0;\n    overflow: hidden;\n    background: #000;\n}\n.treeview-container {\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding-right: 18px;\n}\n.treeview-text {\n    padding: .3rem 0;\n    white-space: nowrap;\n}\n`]\n})\nexport class TreeviewComponent implements OnChanges {\n    @Input() template: TemplateRef<TreeviewItemTemplateContext>;\n    @Input() items: TreeviewItem[];\n    @Input() config: TreeviewConfig;\n    @Output() selectedChange = new EventEmitter<any[]>();\n    allItem: TreeviewItem;\n    filterText: string;\n    filterItems: TreeviewItem[];\n    checkedItems: TreeviewItem[];\n\n    constructor(\n        public i18n: TreeviewI18n,\n        private defaultConfig: TreeviewConfig,\n        private eventParser: TreeviewEventParser\n    ) {\n        this.config = this.defaultConfig;\n        this.allItem = new TreeviewItem({ text: 'All', value: undefined });\n    }\n\n    get hasItems(): boolean {\n        return !_.isNil(this.items) && this.items.length > 0;\n    }\n\n    get hasFilterItems(): boolean {\n        return !_.isNil(this.filterItems) && this.filterItems.length > 0;\n    }\n\n    get maxHeight(): string {\n        return `${this.config.maxHeight}`;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const itemsSimpleChange = changes['items'];\n        if (!_.isNil(itemsSimpleChange)) {\n            this.updateFilterItems();\n            this.updateCollapsedAll();\n            this.raiseSelectedChange();\n        }\n    }\n\n    toggleCollapseExpand() {\n        this.allItem.collapsed = !this.allItem.collapsed;\n        if (!_.isNil(this.filterItems)) {\n            this.filterItems.forEach(item => item.setCollapsedRecursive(this.allItem.collapsed));\n        }\n    }\n\n    onFilterTextChange() {\n        this.updateFilterItems();\n    }\n\n    onAllCheckedChange(checked: boolean) {\n        this.filterItems.forEach(item => {\n            item.setCheckedRecursive(checked);\n            if (item instanceof FilterTreeviewItem) {\n                item.updateRefChecked();\n            }\n        });\n\n        this.raiseSelectedChange();\n    }\n\n    onItemCheckedChange(item: TreeviewItem, checked: boolean) {\n        if (this.allItem.checked !== checked) {\n            let allItemChecked = true;\n            for (let i = 0; i < this.filterItems.length; i++) {\n                if (!this.filterItems[i].checked) {\n                    allItemChecked = false;\n                    break;\n                }\n            }\n\n            if (this.allItem.checked !== allItemChecked) {\n                this.allItem.checked = allItemChecked;\n            }\n        }\n\n        if (item instanceof FilterTreeviewItem) {\n            item.updateRefChecked();\n        }\n\n        this.raiseSelectedChange();\n    }\n\n    raiseSelectedChange() {\n        this.checkedItems = this.getCheckedItems();\n        const values = this.eventParser.getSelectedChange(this);\n        this.selectedChange.emit(values);\n    }\n\n    private getCheckedItems(): TreeviewItem[] {\n        let checkedItems: TreeviewItem[] = [];\n        if (!_.isNil(this.items)) {\n            for (let i = 0; i < this.items.length; i++) {\n                checkedItems = _.concat(checkedItems, this.items[i].getCheckedItems());\n            }\n        }\n\n        return checkedItems;\n    }\n\n    private updateFilterItems() {\n        if (!_.isNil(this.items) && _.isString(this.filterText) && this.filterText !== '') {\n            const filterItems: TreeviewItem[] = [];\n            const filterText = this.filterText.toLowerCase();\n            this.items.forEach(item => {\n                const newItem = this.filterItem(item, filterText);\n                if (!_.isNil(newItem)) {\n                    filterItems.push(newItem);\n                }\n            });\n            this.filterItems = filterItems;\n        } else {\n            this.filterItems = this.items;\n        }\n\n        this.updateCheckedAll();\n    }\n\n    private filterItem(item: TreeviewItem, filterText: string): TreeviewItem {\n        const isMatch = _.includes(item.text.toLowerCase(), filterText);\n        if (isMatch) {\n            return item;\n        } else {\n            if (!_.isNil(item.children)) {\n                const children: TreeviewItem[] = [];\n                let checkedCount = 0;\n                if (!_.isNil(item.children)) {\n                    item.children.forEach(child => {\n                        const newChild = this.filterItem(child, filterText);\n                        if (!_.isNil(newChild)) {\n                            children.push(newChild);\n                            if (newChild.checked) {\n                                checkedCount++;\n                            }\n                        }\n                    });\n                    if (children.length > 0) {\n                        const newItem = new FilterTreeviewItem(item);\n                        newItem.children = children;\n                        return newItem;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    private updateCheckedAll() {\n        if (!_.isNil(this.filterItems)) {\n            let hasItemUnchecked = false;\n            for (let i = 0; i < this.filterItems.length; i++) {\n                if (!this.filterItems[i].checked) {\n                    hasItemUnchecked = true;\n                    break;\n                }\n            }\n\n            if (this.allItem.checked === hasItemUnchecked) {\n                this.allItem.checked = !hasItemUnchecked;\n            }\n        }\n    }\n\n    private updateCollapsedAll() {\n        let hasItemExpanded = false;\n        if (!_.isNil(this.filterItems)) {\n            for (let i = 0; i < this.filterItems.length; i++) {\n                if (!this.filterItems[i].collapsed) {\n                    hasItemExpanded = true;\n                    break;\n                }\n            }\n        }\n        this.allItem.collapsed = !hasItemExpanded;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview.component.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem, TreeviewI18n } from 'ngx-treeview';\nimport { I18n } from './i18n';\n\n@Injectable()\nexport class DefaultTreeviewI18n extends TreeviewI18n {\n    constructor(\n        protected i18n: I18n\n    ) {\n        super();\n    }\n\n    getText(checkededItems: TreeviewItem[], isAll: boolean): string {\n        if (isAll) {\n            return this.i18n.language === 'en' ? 'All' : 'Tất cả';\n        }\n\n        switch (checkededItems.length) {\n            case 0:\n                return this.i18n.language === 'en' ? 'Select options' : 'Chọn mục';\n            case 1:\n                return checkededItems[0].text;\n            default:\n                return this.i18n.language === 'en'\n                    ? `${checkededItems.length} options selected`\n                    : `${checkededItems.length} mục đã được chọn`;\n        }\n    }\n\n    allCheckboxText(): string {\n        if (this.i18n.language === 'en') {\n            return 'All';\n        } else {\n            return 'Tất cả';\n        }\n    }\n\n    filterPlaceholder(): string {\n        if (this.i18n.language === 'en') {\n            return 'Filter';\n        } else {\n            return 'Lọc';\n        }\n    }\n\n    filterNoItemsFoundText(): string {\n        if (this.i18n.language === 'en') {\n            return 'No items found';\n        } else {\n            return 'Không có mục nào được tìm thấy';\n        }\n    }\n\n    tooltipCollapseExpand(isCollapse: boolean): string {\n        return isCollapse\n            ? this.i18n.language === 'en' ? 'Expand' : 'Mở rộng'\n            : this.i18n.language === 'en' ? 'Collapse' : 'Thu lại';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/default-treeview-i18n.ts","import { Component, EventEmitter, Input, Output, HostListener, ViewChild, TemplateRef } from '@angular/core';\nimport * as _ from 'lodash';\nimport { TreeviewI18n } from './treeview-i18n';\nimport { TreeviewItem } from './treeview-item';\nimport { TreeviewConfig } from './treeview-config';\nimport { TreeviewComponent } from './treeview.component';\nimport { TreeviewItemTemplateContext } from './treeview-item-template-context';\n\n@Component({\n    selector: 'ngx-dropdown-treeview',\n    template: `\n<div class=\"dropdown\" [class.show]=\"isOpen\">\n    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" role=\"button\" (click)=\"onButtonClick($event)\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">\n        {{getText()}}\n    </button>\n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" (click)=\"$event.stopPropagation()\">\n        <div class=\"dropdown-container\">\n            <ngx-treeview [items]=\"items\" [template]=\"template\" [config]=\"config\" (selectedChange)=\"onSelectedChange($event)\">\n            </ngx-treeview>\n        </div>\n    </div>\n</div>\n    `,\n    styles: [`\n.dropdown {\n    width: 100%;\n    display: inline-block;\n}\n.dropdown button {\n    width: 100%;\n    margin-right: .9rem;\n    text-align: left;\n}\n.dropdown button::after {\n    position: absolute;\n    right: .6rem;\n    margin-top: .6rem;\n}\n.dropdown .dropdown-menu .row {\n    padding: 2px 10px;\n}\n.dropdown .dropdown-menu .dropdown-item-collapse-expand {\n    padding: 0;\n}\n.dropdown .dropdown-menu .dropdown-container {\n    padding: 0 .6rem;\n}\n    `]\n})\nexport class DropdownTreeviewComponent {\n    @Input() template: TemplateRef<TreeviewItemTemplateContext>;\n    @Input() items: TreeviewItem[];\n    @Input() config: TreeviewConfig;\n    @Output() hide = new EventEmitter();\n    @Output() selectedChange = new EventEmitter<any[]>(true);\n    @ViewChild(TreeviewComponent) treeviewComponent: TreeviewComponent;\n    isOpen = false;\n    private mouseEvent: MouseEvent;\n\n    constructor(\n        public i18n: TreeviewI18n,\n        private defaultConfig: TreeviewConfig\n    ) {\n        this.config = this.defaultConfig;\n    }\n\n    @HostListener('keyup.esc') onKeyupEsc() {\n        this.isOpen = false;\n    }\n    @HostListener('document:click', ['$event']) onDocumentClick(event: MouseEvent) {\n        if (this.mouseEvent !== event) {\n            this.isOpen = false;\n        }\n    }\n\n    get hasItems(): boolean {\n        return !_.isNil(this.items) && this.items.length > 0;\n    }\n\n    getText(): string {\n        if (this.treeviewComponent) {\n            return this.i18n.getText(this.treeviewComponent.checkedItems, this.treeviewComponent.allItem.checked);\n        }\n\n        return '';\n    }\n\n    onSelectedChange(values: any[]) {\n        this.selectedChange.emit(values);\n    }\n\n    onButtonClick(event: MouseEvent) {\n        this.mouseEvent = event;\n        this.isOpen = !this.isOpen;\n        if (!this.isOpen) {\n            this.hide.emit();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/dropdown-treeview.component.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\nimport { TreeviewItem } from './treeview-item';\n\n@Pipe({\n    name: 'ngxTreeview'\n})\nexport class TreeviewPipe implements PipeTransform {\n    transform(objects: any[], textField: string): TreeviewItem[] {\n        if (_.isNil(objects)) {\n            return undefined;\n        }\n\n        return objects.map(object => new TreeviewItem({ text: object[textField], value: object }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/treeview.pipe.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 82;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 82\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './demo/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export * from './dropdown-treeview.module';\r\nexport * from './dropdown-treeview.component';\r\nexport * from './treeview.component';\r\nexport * from './treeview.pipe';\r\nexport * from './treeview-item';\r\nexport * from './treeview-config';\r\nexport * from './treeview-i18n';\r\nexport * from './treeview-event-parser';\r\nexport * from './treeview-item-template-context';\r\nexport * from './treeview-helper';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.ts","import { Component } from '@angular/core';\nimport { TreeviewI18n } from 'ngx-treeview';\nimport { I18n } from './i18n';\nimport { DefaultTreeviewI18n } from './default-treeview-i18n';\n\n@Component({\n    selector: 'ngx-app',\n    template: `\n<div class=\"container\">\n    <h2>Angular ngx-treeview component demo</h2>\n    <hr />\n    <br />\n    <div class=\"row\">\n        <label for=\"item-category\" class=\"col-3 col-form-label\">Language</label>\n        <div class=\"col-9\">\n            <select class=\"form-control\" [(ngModel)]=\"language\">\n                <option value=\"en\">\n                    English\n                </option>\n                <option value=\"vi\">\n                    Tiếng Việt\n                </option>\n            </select>\n        </div>\n    </div>\n    <hr>\n    <h4>Example 1: Primary features</h4>\n    <ngx-book></ngx-book>\n    <br />\n    <h4>Example 2: Performance with 1000 items</h4>\n    <ngx-room></ngx-room>\n    <br />\n    <h4>Example 3: Using pipe & i18n</h4>\n    <ngx-city></ngx-city>\n    <br />\n    <h4>Example 4: Tree-view without drop-down & custom TreeviewConfig & custom TreeviewEventParser & custom template</h4>\n    <ngx-product></ngx-product>\n</div>\n  `,\n    providers: [\n        { provide: TreeviewI18n, useClass: DefaultTreeviewI18n }\n    ]\n})\nexport class AppComponent {\n    constructor(\n        private i18n: I18n\n    ) { }\n\n    set language(language: string) {\n        this.i18n.language = language;\n    }\n\n    get language() {\n        return this.i18n.language;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { DropdownTreeviewModule } from 'ngx-treeview';\nimport { AppComponent } from './app.component';\nimport { BookComponent } from './book/book.component';\nimport { CityComponent } from './city/city.component';\nimport { RoomComponent } from './room/room.component';\nimport { ProductComponent } from './product/product.component';\nimport { I18n } from './i18n';\nimport { DisabledOnSelectorDirective } from './disabled-on-selector.directive';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        DropdownTreeviewModule.forRoot()\n    ],\n    declarations: [\n        BookComponent,\n        CityComponent,\n        RoomComponent,\n        ProductComponent,\n        AppComponent,\n        DisabledOnSelectorDirective\n    ],\n    providers: [\n        I18n\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { TreeviewItem, TreeviewConfig } from 'ngx-treeview';\nimport { BookService } from './book.service';\n\n@Component({\n    selector: 'ngx-book',\n    template: `\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Selected books: {{values}}\n        </div>\n    </div>\n    <div class=\"col-12\">\n        <div class=\"form-check\">\n            <label class=\"form-check-label\">\n                <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"enableButton\">\n                Check/uncheck to enable/disable dropdown button\n            </label>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"book-category\" class=\"col-3 col-form-label\">Book category</label>\n            <div class=\"col-9\">\n                <div class=\"d-inline-block\">\n                    <ngx-dropdown-treeview [config]=\"config\" [items]=\"items\" (selectedChange)=\"values = $event\"\n                        [disabled]=\"!enableButton\" [ngxDisabledOnSelector]=\"'button.dropdown-toggle'\">\n                    </ngx-dropdown-treeview>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n`, providers: [\n        BookService\n    ]\n})\nexport class BookComponent implements OnInit {\n    enableButton = true;\n    items: TreeviewItem[];\n    values: number[];\n    config: TreeviewConfig = {\n        isShowAllCheckBox: true,\n        isShowFilter: true,\n        isShowCollapseExpand: true,\n        maxHeight: 500\n    };\n\n    constructor(\n        private service: BookService\n    ) { }\n\n    ngOnInit() {\n        this.items = this.service.getBooks();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/book/book.component.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem } from 'ngx-treeview';\n\nexport class BookService {\n    getBooks(): TreeviewItem[] {\n        const childrenCategory = new TreeviewItem({\n            text: 'Children', value: 1, collapsed: true, children: [\n                { text: 'Baby 3-5', value: 11 },\n                { text: 'Baby 6-8', value: 12 },\n                { text: 'Baby 9-12', value: 13 }\n            ]\n        });\n        const itCategory = new TreeviewItem({\n            text: 'IT', value: 9, children: [\n                {\n                    text: 'Programming', value: 91, children: [{\n                        text: 'Frontend', value: 911, children: [\n                            { text: 'Angular 1', value: 9111 },\n                            { text: 'Angular 2', value: 9112 },\n                            { text: 'ReactJS', value: 9113 }\n                        ]\n                    }, {\n                        text: 'Backend', value: 912, children: [\n                            { text: 'C#', value: 9121 },\n                            { text: 'Java', value: 9122 },\n                            { text: 'Python', value: 9123, checked: false }\n                        ]\n                    }]\n                },\n                {\n                    text: 'Networking', value: 92, children: [\n                        { text: 'Internet', value: 921 },\n                        { text: 'Security', value: 922 }\n                    ]\n                }\n            ]\n        });\n        const teenCategory = new TreeviewItem({\n            text: 'Teen', value: 2, collapsed: true, disabled: true, children: [\n                { text: 'Adventure', value: 21 },\n                { text: 'Science', value: 22 }\n            ]\n        });\n        const othersCategory = new TreeviewItem({ text: 'Others', value: 3, collapsed: true, disabled: true });\n        return [childrenCategory, itCategory, teenCategory, othersCategory];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/book/book.service.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem } from 'ngx-treeview';\nimport { I18n } from '../i18n';\nimport { DefaultTreeviewI18n } from '../default-treeview-i18n';\n\n@Injectable()\nexport class CityTreeviewI18n extends DefaultTreeviewI18n {\n    constructor(\n        protected i18n: I18n\n    ) {\n        super(i18n);\n    }\n\n    getText(checkededItems: TreeviewItem[], isAll: boolean): string {\n        if (isAll) {\n            return this.i18n.language === 'en' ? 'All cities' : 'Tất cả thành phố';\n        }\n\n        switch (checkededItems.length) {\n            case 0:\n                return this.i18n.language === 'en' ? 'Select cities' : 'Chọn thành phố';\n            case 1:\n                return checkededItems[0].text;\n            default:\n                return this.i18n.language === 'en'\n                    ? `${checkededItems.length} cities selected`\n                    : `${checkededItems.length} thành phố đã được chọn`;\n        }\n    }\n\n    allCheckboxText(): string {\n        return super.allCheckboxText();\n    }\n\n    filterPlaceholder(): string {\n        return super.filterPlaceholder();\n    }\n\n    filterNoItemsFoundText(): string {\n        if (this.i18n.language === 'en') {\n            return 'No cities found';\n        } else {\n            return 'Không có thành phố nào được tìm thấy';\n        }\n    }\n\n    tooltipCollapseExpand(isCollapse: boolean): string {\n        return super.tooltipCollapseExpand(isCollapse);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/city/city-treeview-i18n.ts","import { Component, OnInit } from '@angular/core';\nimport { TreeviewI18n } from 'ngx-treeview';\nimport { City, CityService } from './city.service';\nimport { CityTreeviewI18n } from './city-treeview-i18n';\n\n@Component({\n    selector: 'ngx-city',\n    template: `\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Selected cities: {{values | json}}\n        </div>\n    </div>\n    <div class=\"col-12\">\n        <div class=\"form-group row\">\n            <label for=\"city-category\" class=\"col-3 col-form-label\">City category</label>\n            <div class=\"col-9\">\n                <ngx-dropdown-treeview [items]=\"cities | ngxTreeview:'name'\" (selectedChange)=\"values = $event\">\n                </ngx-dropdown-treeview>\n            </div>\n        </div>\n    </div>\n</div>\n`, providers: [\n        CityService,\n        { provide: TreeviewI18n, useClass: CityTreeviewI18n }\n    ]\n})\nexport class CityComponent implements OnInit {\n    cities: City[];\n    values: City[];\n\n    constructor(\n        private service: CityService\n    ) { }\n\n    ngOnInit() {\n        this.cities = this.service.getCities();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/city/city.component.ts","import { Injectable } from '@angular/core';\n\nexport interface City {\n    id: number;\n    name: string;\n    postCode: number;\n}\n\n@Injectable()\nexport class CityService {\n    getCities(): City[] {\n        return [\n            {\n                id: 1,\n                name: 'Ho Chi Minh',\n                postCode: 700000\n            },\n            {\n                id: 2,\n                name: 'Ha Noi',\n                postCode: 100000\n            },\n            {\n                id: 3,\n                name: 'Da Nang',\n                postCode: 550000\n            }\n        ];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/city/city.service.ts","import { Directive, Input, OnChanges, ElementRef, Renderer } from '@angular/core';\n\n@Directive({\n    selector: '[ngxDisabledOnSelector]'\n})\nexport class DisabledOnSelectorDirective implements OnChanges {\n    @Input('ngxDisabledOnSelector') ngxDisabledOnSelector: string;\n    @Input() disabled: boolean;\n    private readonly nativeElement: HTMLElement;\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer) {\n        this.nativeElement = el.nativeElement;\n    }\n\n    ngOnChanges() {\n        const elements = this.nativeElement.querySelectorAll(this.ngxDisabledOnSelector);\n        for (let i = 0; i < elements.length; i++) {\n            this.renderer.setElementProperty(elements[i], 'disabled', this.disabled);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/disabled-on-selector.directive.ts","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport * as _ from 'lodash';\nimport {\n    TreeviewI18n, TreeviewItem, TreeviewConfig, TreeviewHelper, TreeviewComponent,\n    TreeviewEventParser, OrderDownlineTreeviewEventParser, DownlineTreeviewItem\n} from 'ngx-treeview';\nimport { ProductService } from './product.service';\n\n@Injectable()\nexport class ProductTreeviewConfig extends TreeviewConfig {\n    isShowAllCheckBox = true;\n    isShowFilter = true;\n    isShowCollapseExpand = false;\n    maxHeight = 500;\n}\n\n@Component({\n    selector: 'ngx-product',\n    template: `\n<ng-template #tpl let-item=\"item\"\n    let-toggleCollapseExpand=\"toggleCollapseExpand\"\n    let-onCheckedChange=\"onCheckedChange\">\n    <div class=\"form-check\">\n        <i *ngIf=\"item.children\" (click)=\"toggleCollapseExpand()\" aria-hidden=\"true\"\n            class=\"fa\" [class.fa-caret-right]=\"item.collapsed\" [class.fa-caret-down]=\"!item.collapsed\"></i>\n        <label class=\"form-check-label\">\n            <input type=\"checkbox\" class=\"form-check-input\"\n                [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\" />\n            {{item.text}}\n        </label>\n        <label class=\"form-check-label\">\n            <i class=\"fa fa-trash\" aria-hidden=\"true\" title=\"Remove\" (click)=\"removeItem(item)\"></i>\n        </label>\n    </div>\n</ng-template>\n<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <div class=\"d-inline-block\">\n                <ngx-treeview [items]=\"items\" [template]=\"tpl\" (selectedChange)=\"onSelectedChange($event)\">\n                </ngx-treeview>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Selected products:\n            <div *ngFor=\"let row of rows\">{{row}}</div>\n        </div>\n    </div>\n</div>\n`, providers: [\n        ProductService,\n        { provide: TreeviewEventParser, useClass: OrderDownlineTreeviewEventParser },\n        { provide: TreeviewConfig, useClass: ProductTreeviewConfig }\n    ]\n})\nexport class ProductComponent implements OnInit {\n    @ViewChild(TreeviewComponent) treeviewComponent: TreeviewComponent;\n    items: TreeviewItem[];\n    rows: string[];\n\n    constructor(\n        private service: ProductService\n    ) { }\n\n    ngOnInit() {\n        this.items = this.service.getProducts();\n    }\n\n    onItemCheckedChange(item: TreeviewItem) {\n        console.log(item);\n    }\n\n    onSelectedChange(downlineItems: DownlineTreeviewItem[]) {\n        this.rows = [];\n        downlineItems.forEach(downlineItem => {\n            const item = downlineItem.item;\n            const value = item.value;\n            const texts = [item.text];\n            let parent = downlineItem.parent;\n            while (!_.isNil(parent)) {\n                texts.push(parent.item.text);\n                parent = parent.parent;\n            }\n            const reverseTexts = _.reverse(texts);\n            const row = `${reverseTexts.join(' -> ')} : ${value}`;\n            this.rows.push(row);\n        });\n    }\n\n    removeItem(item: TreeviewItem) {\n        TreeviewHelper.removeItem(item, this.items);\n        this.treeviewComponent.raiseSelectedChange();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/product/product.component.ts","import { Injectable } from '@angular/core';\nimport { TreeviewItem } from 'ngx-treeview';\n\nexport class ProductService {\n    getProducts(): TreeviewItem[] {\n        const fruitCategory = new TreeviewItem({\n            text: 'Fruit', value: 1, children: [\n                { text: 'Apple', value: 11 },\n                { text: 'Mango', value: 12 }\n            ]\n        });\n        const vegetableCategory = new TreeviewItem({\n            text: 'Vegetable', value: 2, children: [\n                { text: 'Salad', value: 21 },\n                { text: 'Potato', value: 22 }\n            ]\n        });\n        vegetableCategory.children.push(new TreeviewItem({ text: 'Mushroom', value: 23, checked: false }));\n        vegetableCategory.correctChecked(); // need this to make 'Vegetable' node to change checked value from true to false\n        return [fruitCategory, vegetableCategory];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/product/product.service.ts"],"sourceRoot":""}